From 083528d6cfb8333a5ca0415c05bde2c877ad1f54 Mon Sep 17 00:00:00 2001
From: Roberto Leinardi <leinardi@gmail.com>
Date: Mon, 4 Jul 2022 20:12:25 +0200
Subject: [PATCH 1/8] Fixes overclock profile list not refreshing correctly

---
 gwe/di.py | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/gwe/di.py b/gwe/di.py
index b0e8042..dfcb128 100644
--- a/gwe/di.py
+++ b/gwe/di.py
@@ -121,7 +121,7 @@ class ProviderModule(Module):
 
     @singleton
     @provider
-    def provide_overclock_profile_changed_subject(self) -> SettingChangedSubject:
+    def provide_setting_changed_subject(self) -> SettingChangedSubject:
         return SettingChangedSubject(Subject())
 
 
-- 
GitLab


From 1b64e99846e8463194232ea6a1a1a3bae50b6466 Mon Sep 17 00:00:00 2001
From: Roberto Leinardi <leinardi@gmail.com>
Date: Mon, 4 Jul 2022 20:14:57 +0200
Subject: [PATCH 2/8] Updated dependencies

---
 gwe/__main__.py                                   |  2 +-
 gwe/di.py                                         |  4 ++--
 gwe/interactor/check_new_version_interactor.py    |  6 +++---
 gwe/interactor/get_status_interactor.py           |  6 +++---
 gwe/interactor/has_nvidia_driver_interactor.py    |  6 +++---
 gwe/interactor/set_fan_speed_interactor.py        |  8 ++++----
 gwe/interactor/set_overclock_interactor.py        |  8 ++++----
 gwe/interactor/set_power_limit_iInteractor.py     |  6 +++---
 gwe/presenter/edit_overclock_profile_presenter.py |  8 ++++----
 gwe/presenter/main_presenter.py                   | 14 +++++++-------
 gwe/util/log.py                                   |  2 +-
 requirements.txt                                  | 14 +++++++-------
 12 files changed, 42 insertions(+), 42 deletions(-)

diff --git a/gwe/__main__.py b/gwe/__main__.py
index abfc8a8..6a874f3 100755
--- a/gwe/__main__.py
+++ b/gwe/__main__.py
@@ -27,7 +27,7 @@ from os.path import abspath, join, dirname
 
 from peewee import SqliteDatabase
 from gi.repository import GLib
-from rx.disposable import CompositeDisposable
+from reactivex.disposable import CompositeDisposable
 
 from gwe.conf import APP_PACKAGE_NAME
 from gwe.model.current_fan_profile import CurrentFanProfile
diff --git a/gwe/di.py b/gwe/di.py
index dfcb128..7731eca 100644
--- a/gwe/di.py
+++ b/gwe/di.py
@@ -21,8 +21,8 @@ from typing import NewType
 from gi.repository import Gtk
 from injector import Module, provider, singleton, Injector
 from peewee import SqliteDatabase
-from rx.disposable import CompositeDisposable
-from rx.subject import Subject
+from reactivex.disposable import CompositeDisposable
+from reactivex.subject import Subject
 
 from gwe.conf import APP_PACKAGE_NAME, APP_MAIN_UI_NAME, APP_DB_NAME, APP_EDIT_FAN_PROFILE_UI_NAME, \
     APP_PREFERENCES_UI_NAME, APP_HISTORICAL_DATA_UI_NAME, APP_EDIT_OC_PROFILE_UI_NAME
diff --git a/gwe/interactor/check_new_version_interactor.py b/gwe/interactor/check_new_version_interactor.py
index 0427293..1cba675 100644
--- a/gwe/interactor/check_new_version_interactor.py
+++ b/gwe/interactor/check_new_version_interactor.py
@@ -20,9 +20,9 @@ from distutils.version import LooseVersion
 from typing import Optional
 
 import requests
-import rx
+import reactivex
 from injector import singleton, inject
-from rx import Observable
+from reactivex import Observable
 
 from gwe.conf import APP_ID, APP_VERSION
 
@@ -39,7 +39,7 @@ class CheckNewVersionInteractor:
 
     def execute(self) -> Observable:
         _LOG.debug("CheckNewVersionInteractor.execute()")
-        return rx.defer(lambda _: rx.just(self._check_new_version()))
+        return reactivex.defer(lambda _: reactivex.just(self._check_new_version()))
 
     def _check_new_version(self) -> Optional[LooseVersion]:
         req = requests.get(self.URL_PATTERN.format(package=APP_ID))
diff --git a/gwe/interactor/get_status_interactor.py b/gwe/interactor/get_status_interactor.py
index 1151831..d048494 100644
--- a/gwe/interactor/get_status_interactor.py
+++ b/gwe/interactor/get_status_interactor.py
@@ -14,9 +14,9 @@
 #
 # You should have received a copy of the GNU General Public License
 # along with gst.  If not, see <http://www.gnu.org/licenses/>.
-import rx
+import reactivex
 from injector import singleton, inject
-from rx import Observable
+from reactivex import Observable
 
 from gwe.repository.nvidia_repository import NvidiaRepository
 
@@ -29,4 +29,4 @@ class GetStatusInteractor:
 
     def execute(self) -> Observable:
         # _LOG.debug("GetStatusInteractor.execute()")
-        return rx.defer(lambda _: rx.just(self._nvidia_repository.get_status()))
+        return reactivex.defer(lambda _: reactivex.just(self._nvidia_repository.get_status()))
diff --git a/gwe/interactor/has_nvidia_driver_interactor.py b/gwe/interactor/has_nvidia_driver_interactor.py
index 5549919..ce3ec5b 100644
--- a/gwe/interactor/has_nvidia_driver_interactor.py
+++ b/gwe/interactor/has_nvidia_driver_interactor.py
@@ -16,9 +16,9 @@
 # along with gst.  If not, see <http://www.gnu.org/licenses/>.
 from enum import Enum, auto
 
-import rx
+import reactivex
 from injector import singleton, inject
-from rx import Observable
+from reactivex import Observable
 
 from gwe.repository.nvidia_repository import NvidiaRepository
 
@@ -36,7 +36,7 @@ class HasNvidiaDriverInteractor:
         self._nvidia_repository = nvidia_repository
 
     def execute(self) -> Observable:
-        return rx.defer(lambda _: rx.just(self._has_nvidia_driver()))
+        return reactivex.defer(lambda _: reactivex.just(self._has_nvidia_driver()))
 
     def _has_nvidia_driver(self) -> HasNvidiaDriverResult:
         if not self._nvidia_repository.has_nv_control_extension():
diff --git a/gwe/interactor/set_fan_speed_interactor.py b/gwe/interactor/set_fan_speed_interactor.py
index a0e4733..ef9245f 100644
--- a/gwe/interactor/set_fan_speed_interactor.py
+++ b/gwe/interactor/set_fan_speed_interactor.py
@@ -16,9 +16,9 @@
 # along with gst.  If not, see <http://www.gnu.org/licenses/>.
 import logging
 
-import rx
+import reactivex
 from injector import singleton, inject
-from rx import Observable
+from reactivex import Observable
 
 from gwe.repository.nvidia_repository import NvidiaRepository
 
@@ -33,5 +33,5 @@ class SetFanSpeedInteractor:
 
     def execute(self, gpu_index: int, speed: int = 100, manual_control: bool = True) -> Observable:
         _LOG.debug("SetSpeedProfileInteractor.execute()")
-        return rx.defer(
-            lambda _: rx.just(self._nvidia_repository.set_fan_speed(gpu_index, speed, manual_control)))
+        return reactivex.defer(
+            lambda _: reactivex.just(self._nvidia_repository.set_fan_speed(gpu_index, speed, manual_control)))
diff --git a/gwe/interactor/set_overclock_interactor.py b/gwe/interactor/set_overclock_interactor.py
index b0b71a4..ee2a479 100644
--- a/gwe/interactor/set_overclock_interactor.py
+++ b/gwe/interactor/set_overclock_interactor.py
@@ -16,9 +16,9 @@
 # along with gst.  If not, see <http://www.gnu.org/licenses/>.
 import logging
 
-import rx
+import reactivex
 from injector import singleton, inject
-from rx import Observable
+from reactivex import Observable
 
 from gwe.repository.nvidia_repository import NvidiaRepository
 
@@ -33,5 +33,5 @@ class SetOverclockInteractor:
 
     def execute(self, gpu_index: int, perf: int, gpu_offset: int, memory_offset: int) -> Observable:
         _LOG.debug("SetOverclockInteractor.execute()")
-        return rx.defer(
-            lambda _: rx.just(self._nvidia_repository.set_overclock(gpu_index, perf, gpu_offset, memory_offset)))
+        return reactivex.defer(
+            lambda _: reactivex.just(self._nvidia_repository.set_overclock(gpu_index, perf, gpu_offset, memory_offset)))
diff --git a/gwe/interactor/set_power_limit_iInteractor.py b/gwe/interactor/set_power_limit_iInteractor.py
index 450cf02..a719d75 100644
--- a/gwe/interactor/set_power_limit_iInteractor.py
+++ b/gwe/interactor/set_power_limit_iInteractor.py
@@ -16,9 +16,9 @@
 # along with gst.  If not, see <http://www.gnu.org/licenses/>.
 import logging
 
-import rx
+import reactivex
 from injector import singleton, inject
-from rx import Observable
+from reactivex import Observable
 
 from gwe.repository.nvidia_repository import NvidiaRepository
 
@@ -33,4 +33,4 @@ class SetPowerLimitInteractor:
 
     def execute(self, gpu_index: int, limit: int) -> Observable:
         _LOG.debug("SetPowerLimitInteractor.execute()")
-        return rx.defer(lambda _: rx.just(self._nvidia_repository.set_power_limit(gpu_index, limit)))
+        return reactivex.defer(lambda _: reactivex.just(self._nvidia_repository.set_power_limit(gpu_index, limit)))
diff --git a/gwe/presenter/edit_overclock_profile_presenter.py b/gwe/presenter/edit_overclock_profile_presenter.py
index 40d7e25..fbae017 100644
--- a/gwe/presenter/edit_overclock_profile_presenter.py
+++ b/gwe/presenter/edit_overclock_profile_presenter.py
@@ -20,10 +20,10 @@ from typing import Any, Optional
 
 from gi.repository import Gtk, GLib
 from injector import singleton, inject
-from rx import operators
-from rx.disposable import CompositeDisposable
-from rx.scheduler import ThreadPoolScheduler
-from rx.scheduler.mainloop import GtkScheduler
+from reactivex import operators
+from reactivex.disposable import CompositeDisposable
+from reactivex.scheduler import ThreadPoolScheduler
+from reactivex.scheduler.mainloop import GtkScheduler
 
 from gwe.interactor.set_overclock_interactor import SetOverclockInteractor
 from gwe.model.overclock_profile import OverclockProfile
diff --git a/gwe/presenter/main_presenter.py b/gwe/presenter/main_presenter.py
index 41bf911..b53f887 100644
--- a/gwe/presenter/main_presenter.py
+++ b/gwe/presenter/main_presenter.py
@@ -20,13 +20,13 @@ import logging
 import multiprocessing
 from typing import Optional, Any, List, Tuple
 
-import rx
+import reactivex
 from gi.repository import GLib
 from injector import inject, singleton
-from rx import Observable, operators
-from rx.disposable import CompositeDisposable
-from rx.scheduler import ThreadPoolScheduler
-from rx.scheduler.mainloop import GtkScheduler
+from reactivex import Observable, operators
+from reactivex.disposable import CompositeDisposable
+from reactivex.scheduler import ThreadPoolScheduler
+from reactivex.scheduler.mainloop import GtkScheduler
 
 from gwe.conf import APP_NAME, APP_SOURCE_URL, APP_VERSION, APP_ID
 from gwe.di import FanProfileChangedSubject, SpeedStepChangedSubject, OverclockProfileChangedSubject, \
@@ -310,7 +310,7 @@ class MainPresenter:
     def _start_refresh(self) -> None:
         _LOG.debug("start refresh")
         refresh_interval = self._settings_interactor.get_int('settings_refresh_interval')
-        self._composite_disposable.add(rx.interval(refresh_interval, scheduler=self._scheduler).pipe(
+        self._composite_disposable.add(reactivex.interval(refresh_interval, scheduler=self._scheduler).pipe(
             operators.start_with(0),
             operators.subscribe_on(self._scheduler),
             operators.flat_map(lambda _: self._get_status()),
@@ -490,7 +490,7 @@ class MainPresenter:
     def _log_exception_return_empty_observable(self, ex: Exception, _: Observable) -> Observable:
         _LOG.exception(f"Err = {ex}")
         self.main_view.set_statusbar_text(str(ex))
-        observable = rx.just(None)
+        observable = reactivex.just(None)
         assert isinstance(observable, Observable)
         return observable
 
diff --git a/gwe/util/log.py b/gwe/util/log.py
index f028019..c9ec303 100644
--- a/gwe/util/log.py
+++ b/gwe/util/log.py
@@ -30,7 +30,7 @@ def set_log_level(level: int) -> None:
     elif level <= logging.INFO:
         log_format = LOG_INFO_FORMAT
     logging.basicConfig(level=level, format=log_format)
-    logging.getLogger("Rx").setLevel(logging.INFO)
+    logging.getLogger("reactivex").setLevel(logging.INFO)
     logging.getLogger('injector').setLevel(logging.INFO)
     logging.getLogger('peewee').setLevel(logging.INFO)
     logging.getLogger('matplotlib').setLevel(logging.INFO)
diff --git a/requirements.txt b/requirements.txt
index 4dd0129..3b2ced4 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,9 +1,9 @@
-injector==0.19.0
-matplotlib==3.5.1
-peewee==3.14.10
+injector==0.20.0
+matplotlib==3.5.2
+peewee==3.15.0
 py3nvml==0.2.7
-PyGObject==3.42.0
+PyGObject==3.42.1
 python-xlib==0.31
-pyxdg==0.27
-requests==2.27.1
-Rx==3.2.0
\ No newline at end of file
+pyxdg==0.28
+requests==2.28.1
+reactivex==4.0.3
\ No newline at end of file
-- 
GitLab


From 215ce9b2bd3405e85d6010d3aef839ee7b8634bc Mon Sep 17 00:00:00 2001
From: Roberto Leinardi <leinardi@gmail.com>
Date: Thu, 14 Jul 2022 21:50:33 +0200
Subject: [PATCH 3/8] Updated dependencies

---
 requirements.txt | 4 ++--
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/requirements.txt b/requirements.txt
index 3b2ced4..94f765d 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,6 +1,6 @@
-injector==0.20.0
+injector==0.20.1
 matplotlib==3.5.2
-peewee==3.15.0
+peewee==3.15.1
 py3nvml==0.2.7
 PyGObject==3.42.1
 python-xlib==0.31
-- 
GitLab


From 1fdb3ba1f36bc34562332a045025791800b34193 Mon Sep 17 00:00:00 2001
From: Nikolay Borodin <monsterovich@gmail.com>
Date: Mon, 18 Jul 2022 18:46:47 +0000
Subject: [PATCH 4/8] VBIOS fan silent mode feature

---
 data/ui/edit_fan_profile.glade              | 20 +++++++++++--
 gwe/di.py                                   | 33 ++++++++++++++++++---
 gwe/model/__init__.py                       |  2 +-
 gwe/model/current_fan_profile.py            |  3 +-
 gwe/model/fan_profile.py                    |  1 +
 gwe/presenter/edit_fan_profile_presenter.py |  6 +++-
 gwe/presenter/main_presenter.py             |  5 +++-
 gwe/view/edit_fan_profile_view.py           | 10 +++++--
 8 files changed, 68 insertions(+), 12 deletions(-)

diff --git a/data/ui/edit_fan_profile.glade b/data/ui/edit_fan_profile.glade
index 07495dc..b9280c1 100644
--- a/data/ui/edit_fan_profile.glade
+++ b/data/ui/edit_fan_profile.glade
@@ -1,5 +1,5 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<!-- Generated with glade 3.22.1 
+<!-- Generated with glade 3.22.2 
 
 Copyright (C) 
 
@@ -185,6 +185,22 @@ along with GWE.  If not, see <http://www.gnu.org/licenses/>.
                     <property name="position">1</property>
                   </packing>
                 </child>
+                <child>
+                  <object class="GtkCheckButton" id="vbios_silent_mode">
+                    <property name="label" translatable="yes">VBIOS control on low temps</property>
+                    <property name="visible">True</property>
+                    <property name="can_focus">True</property>
+                    <property name="receives_default">False</property>
+                    <property name="tooltip_text" translatable="yes">Some GPUs (e.g. RTX 3060 Ti) do not allow fan speed to be set below a certain level (e.g. 30%) in manual speed control mode. This option allows you to disable the fans by switching to VBIOS controller mode when the temperature is below the minimum temperature on the chart. May produce undefined behavior. This option is useless on GPUs that allow any fan speed to be set.</property>
+                    <property name="draw_indicator">True</property>
+                    <signal name="toggled" handler="vbios_silent_mode_toggled" swapped="no"/>
+                  </object>
+                  <packing>
+                    <property name="expand">False</property>
+                    <property name="fill">True</property>
+                    <property name="position">2</property>
+                  </packing>
+                </child>
                 <child>
                   <object class="GtkFrame">
                     <property name="visible">True</property>
@@ -345,7 +361,7 @@ along with GWE.  If not, see <http://www.gnu.org/licenses/>.
                   <packing>
                     <property name="expand">False</property>
                     <property name="fill">True</property>
-                    <property name="position">2</property>
+                    <property name="position">3</property>
                   </packing>
                 </child>
               </object>
diff --git a/gwe/di.py b/gwe/di.py
index 7731eca..bc2532b 100644
--- a/gwe/di.py
+++ b/gwe/di.py
@@ -15,12 +15,15 @@
 # You should have received a copy of the GNU General Public License
 # along with gwe.  If not, see <http://www.gnu.org/licenses/>.
 
+import os
 import logging
+import shutil
 from typing import NewType
 
 from gi.repository import Gtk
 from injector import Module, provider, singleton, Injector
-from peewee import SqliteDatabase
+from peewee import SqliteDatabase, BooleanField
+from playhouse.migrate import SqliteMigrator, migrate
 from reactivex.disposable import CompositeDisposable
 from reactivex.subject import Subject
 
@@ -29,6 +32,7 @@ from gwe.conf import APP_PACKAGE_NAME, APP_MAIN_UI_NAME, APP_DB_NAME, APP_EDIT_F
 from gwe.util.path import get_config_path
 
 _LOG = logging.getLogger(__name__)
+_CURRENT_DB_VERSION = 1
 
 SpeedStepChangedSubject = NewType('SpeedStepChangedSubject', Subject)
 FanProfileChangedSubject = NewType('FanProfileChangedSubject', Subject)
@@ -96,13 +100,34 @@ class ProviderModule(Module):
         _LOG.debug("provide CompositeDisposable")
         return CompositeDisposable()
 
+    def _create_database(self, path_to_db):
+        database = SqliteDatabase(path_to_db)
+
+        if os.path.exists(path_to_db):
+            if database.pragma('user_version') == 0:
+                _LOG.debug("upgrading database to version 1")
+                shutil.copyfile(path_to_db, path_to_db + '.bak')
+
+                database.pragma('user_version', 1, permanent=True)
+
+                migrator = SqliteMigrator(database)
+                vbios_silent_mode = BooleanField(default=False)
+                migrate(
+                    migrator.add_column('fan_profile', 'vbios_silent_mode', vbios_silent_mode),
+                    migrator.add_column('current_fan_profile', 'vbios_silent_mode', vbios_silent_mode)
+                )
+
+                database.commit()
+        else:
+            database.pragma('user_version', _CURRENT_DB_VERSION, permanent=True)
+
+        return database
+
     @singleton
     @provider
     def provide_database(self) -> SqliteDatabase:
         _LOG.debug("provide SqliteDatabase")
-        database = SqliteDatabase(get_config_path(APP_DB_NAME))
-        database.connect()
-        return database
+        return self._create_database(get_config_path(APP_DB_NAME))
 
     @singleton
     @provider
diff --git a/gwe/model/__init__.py b/gwe/model/__init__.py
index cfa837c..22a7bd9 100644
--- a/gwe/model/__init__.py
+++ b/gwe/model/__init__.py
@@ -22,7 +22,7 @@ from gwe.model.speed_step import SpeedStep
 
 
 def load_fan_db_default_data() -> None:
-    FanProfile.create(name="Auto (VBIOS controlled)", type=FanProfileType.AUTO.value, read_only=True)
+    FanProfile.create(name="Auto (VBIOS controlled)", type=FanProfileType.AUTO.value, read_only=True, vbios_silent_mode=False)
     fan_silent = FanProfile.create(name="Custom")
 
     # Fan Silent
diff --git a/gwe/model/current_fan_profile.py b/gwe/model/current_fan_profile.py
index 228cb2e..76edb84 100644
--- a/gwe/model/current_fan_profile.py
+++ b/gwe/model/current_fan_profile.py
@@ -14,7 +14,7 @@
 #
 # You should have received a copy of the GNU General Public License
 # along with gst.  If not, see <http://www.gnu.org/licenses/>.
-from peewee import ForeignKeyField, DateTimeField, SQL, SqliteDatabase
+from peewee import ForeignKeyField, DateTimeField, BooleanField, SQL, SqliteDatabase
 from playhouse.signals import Model
 
 from gwe.di import INJECTOR
@@ -24,6 +24,7 @@ from gwe.model.fan_profile import FanProfile
 class CurrentFanProfile(Model):
     profile = ForeignKeyField(FanProfile, unique=True)
     timestamp = DateTimeField(constraints=[SQL('DEFAULT CURRENT_TIMESTAMP')])
+    vbios_silent_mode = BooleanField(default=False)
 
     class Meta:
         legacy_table_names = False
diff --git a/gwe/model/fan_profile.py b/gwe/model/fan_profile.py
index fbf4fa6..9a2c5b6 100644
--- a/gwe/model/fan_profile.py
+++ b/gwe/model/fan_profile.py
@@ -37,6 +37,7 @@ class FanProfile(Model):
     name = CharField()
     read_only = BooleanField(default=False)
     timestamp = DateTimeField(constraints=[SQL('DEFAULT CURRENT_TIMESTAMP')])
+    vbios_silent_mode = BooleanField(default=False)
 
     class Meta:
         legacy_table_names = False
diff --git a/gwe/presenter/edit_fan_profile_presenter.py b/gwe/presenter/edit_fan_profile_presenter.py
index 15e3da3..e2bea53 100644
--- a/gwe/presenter/edit_fan_profile_presenter.py
+++ b/gwe/presenter/edit_fan_profile_presenter.py
@@ -89,7 +89,11 @@ class EditFanProfilePresenter:
 
     def refresh_controls(self, step: Optional[SpeedStep] = None, deselect_list: bool = False) -> None:
         self._selected_step = step
-        self.view.refresh_controls(step, deselect_list)
+        self.view.refresh_controls(step, deselect_list, self._profile)
+
+    def vbios_silent_mode_toggled(self, widget: Gtk.ToggleButton) -> None:
+        self._profile.vbios_silent_mode = widget.get_active()
+        self._profile.save()
 
     def on_step_selected(self, tree_selection: Gtk.TreeSelection) -> None:
         _LOG.debug("selected")
diff --git a/gwe/presenter/main_presenter.py b/gwe/presenter/main_presenter.py
index b53f887..0b9f55a 100644
--- a/gwe/presenter/main_presenter.py
+++ b/gwe/presenter/main_presenter.py
@@ -345,7 +345,10 @@ class MainPresenter:
                 elif gpu_status.temp.gpu:
                     try:
                         speed = round(self._get_fan_duty(self._fan_profile_applied, gpu_status.temp.gpu))
-                        if self._should_update_fan_duty(speed):
+                        if self._fan_profile_applied.vbios_silent_mode and \
+                        gpu_status.temp.gpu < self._fan_profile_applied.steps[0].temperature:
+                            self._set_fan_speed(gpu_status.index, manual_control=False)
+                        elif self._should_update_fan_duty(speed):
                             self._set_fan_speed(gpu_status.index, round(speed))
                     except ValueError:
                         _LOG.exception(f'Unable to parse temperature {gpu_status.temp.gpu}')
diff --git a/gwe/view/edit_fan_profile_view.py b/gwe/view/edit_fan_profile_view.py
index e81913d..2aa5b27 100644
--- a/gwe/view/edit_fan_profile_view.py
+++ b/gwe/view/edit_fan_profile_view.py
@@ -57,6 +57,8 @@ class EditFanProfileView(EditFanProfileViewInterface):
         self._profile_name_entry: Gtk.Entry = self._builder \
             .get_object('profile_name_entry')
         self._liststore: Gtk.ListStore = self._builder.get_object('liststore')
+        self._vbios_silent_mode: Gtk.CheckButton = self._builder \
+            .get_object("vbios_silent_mode")
         self._temperature_adjustment: Gtk.Adjustment = self._builder \
             .get_object('temperature_adjustment')
         self._duty_adjustment: Gtk.Adjustment = self._builder \
@@ -106,7 +108,7 @@ class EditFanProfileView(EditFanProfileViewInterface):
         self._treeselection.unselect_all()
         self._profile_name_entry.set_text(profile.name)
         self.refresh_liststore(profile)
-        self.refresh_controls()
+        self.refresh_controls(profile=profile)
         self._dialog.show_all()
 
     def hide(self) -> None:
@@ -138,7 +140,11 @@ class EditFanProfileView(EditFanProfileViewInterface):
 
         self._plot_chart(get_fan_profile_data(profile))
 
-    def refresh_controls(self, step: Optional[SpeedStep] = None, unselect_list: bool = False) -> None:
+    def refresh_controls(self, step: Optional[SpeedStep] = None, unselect_list: bool = False, profile: Optional[FanProfile] = None) -> None:
+        if profile:
+            self._vbios_silent_mode.set_active(profile.vbios_silent_mode)
+            self._vbios_silent_mode.set_sensitive(profile.steps)
+
         if unselect_list:
             self._treeselection.unselect_all()
         if step is None:
-- 
GitLab


From e03cf463862a0f26394f8f384b28f1dd3d018a75 Mon Sep 17 00:00:00 2001
From: Roberto Leinardi <leinardi@gmail.com>
Date: Mon, 18 Jul 2022 20:57:34 +0200
Subject: [PATCH 5/8] A little code clean-up

---
 gwe/conf.py                                 | 1 +
 gwe/di.py                                   | 8 ++++----
 gwe/model/__init__.py                       | 7 ++++++-
 gwe/model/fan_profile_type.py               | 2 +-
 gwe/presenter/edit_fan_profile_presenter.py | 5 ++++-
 gwe/presenter/main_presenter.py             | 2 +-
 gwe/view/edit_fan_profile_view.py           | 5 ++++-
 7 files changed, 21 insertions(+), 9 deletions(-)

diff --git a/gwe/conf.py b/gwe/conf.py
index 37259d6..f85c73e 100644
--- a/gwe/conf.py
+++ b/gwe/conf.py
@@ -23,6 +23,7 @@ APP_VERSION = "0.15.5"
 APP_ICON_NAME = APP_ID
 APP_ICON_NAME_SYMBOLIC = APP_ID + "-symbolic"
 APP_DB_NAME = APP_PACKAGE_NAME + ".db"
+APP_DB_VERSION = 1
 APP_MAIN_UI_NAME = "main.glade"
 APP_EDIT_FAN_PROFILE_UI_NAME = "edit_fan_profile.glade"
 APP_EDIT_OC_PROFILE_UI_NAME = "edit_oc_profile.glade"
diff --git a/gwe/di.py b/gwe/di.py
index bc2532b..040e8dc 100644
--- a/gwe/di.py
+++ b/gwe/di.py
@@ -28,11 +28,10 @@ from reactivex.disposable import CompositeDisposable
 from reactivex.subject import Subject
 
 from gwe.conf import APP_PACKAGE_NAME, APP_MAIN_UI_NAME, APP_DB_NAME, APP_EDIT_FAN_PROFILE_UI_NAME, \
-    APP_PREFERENCES_UI_NAME, APP_HISTORICAL_DATA_UI_NAME, APP_EDIT_OC_PROFILE_UI_NAME
+    APP_PREFERENCES_UI_NAME, APP_HISTORICAL_DATA_UI_NAME, APP_EDIT_OC_PROFILE_UI_NAME, APP_DB_VERSION
 from gwe.util.path import get_config_path
 
 _LOG = logging.getLogger(__name__)
-_CURRENT_DB_VERSION = 1
 
 SpeedStepChangedSubject = NewType('SpeedStepChangedSubject', Subject)
 FanProfileChangedSubject = NewType('FanProfileChangedSubject', Subject)
@@ -100,7 +99,8 @@ class ProviderModule(Module):
         _LOG.debug("provide CompositeDisposable")
         return CompositeDisposable()
 
-    def _create_database(self, path_to_db):
+    @staticmethod
+    def _create_database(path_to_db: str) -> SqliteDatabase:
         database = SqliteDatabase(path_to_db)
 
         if os.path.exists(path_to_db):
@@ -119,7 +119,7 @@ class ProviderModule(Module):
 
                 database.commit()
         else:
-            database.pragma('user_version', _CURRENT_DB_VERSION, permanent=True)
+            database.pragma('user_version', APP_DB_VERSION, permanent=True)
 
         return database
 
diff --git a/gwe/model/__init__.py b/gwe/model/__init__.py
index 22a7bd9..64bb673 100644
--- a/gwe/model/__init__.py
+++ b/gwe/model/__init__.py
@@ -22,7 +22,12 @@ from gwe.model.speed_step import SpeedStep
 
 
 def load_fan_db_default_data() -> None:
-    FanProfile.create(name="Auto (VBIOS controlled)", type=FanProfileType.AUTO.value, read_only=True, vbios_silent_mode=False)
+    FanProfile.create(
+        name="Auto (VBIOS controlled)",
+        type=FanProfileType.AUTO.value,
+        read_only=True,
+        vbios_silent_mode=False
+    )
     fan_silent = FanProfile.create(name="Custom")
 
     # Fan Silent
diff --git a/gwe/model/fan_profile_type.py b/gwe/model/fan_profile_type.py
index fb47442..6c8f683 100644
--- a/gwe/model/fan_profile_type.py
+++ b/gwe/model/fan_profile_type.py
@@ -19,4 +19,4 @@ from enum import Enum
 
 class FanProfileType(Enum):
     AUTO = 'auto'
-    FAN_CURVE = 'fan_curve'
\ No newline at end of file
+    FAN_CURVE = 'fan_curve'
diff --git a/gwe/presenter/edit_fan_profile_presenter.py b/gwe/presenter/edit_fan_profile_presenter.py
index e2bea53..c3d65d6 100644
--- a/gwe/presenter/edit_fan_profile_presenter.py
+++ b/gwe/presenter/edit_fan_profile_presenter.py
@@ -49,7 +49,10 @@ class EditFanProfileViewInterface:
     def has_a_step_selected(self) -> bool:
         raise NotImplementedError()
 
-    def refresh_controls(self, step: Optional[SpeedStep] = None, unselect_list: bool = False) -> None:
+    def refresh_controls(self,
+                         step: Optional[SpeedStep] = None,
+                         unselect_list: bool = False,
+                         profile: Optional[FanProfile] = None) -> None:
         raise NotImplementedError()
 
     def refresh_liststore(self, profile: FanProfile) -> None:
diff --git a/gwe/presenter/main_presenter.py b/gwe/presenter/main_presenter.py
index 0b9f55a..ec46986 100644
--- a/gwe/presenter/main_presenter.py
+++ b/gwe/presenter/main_presenter.py
@@ -346,7 +346,7 @@ class MainPresenter:
                     try:
                         speed = round(self._get_fan_duty(self._fan_profile_applied, gpu_status.temp.gpu))
                         if self._fan_profile_applied.vbios_silent_mode and \
-                        gpu_status.temp.gpu < self._fan_profile_applied.steps[0].temperature:
+                                gpu_status.temp.gpu < self._fan_profile_applied.steps[0].temperature:
                             self._set_fan_speed(gpu_status.index, manual_control=False)
                         elif self._should_update_fan_duty(speed):
                             self._set_fan_speed(gpu_status.index, round(speed))
diff --git a/gwe/view/edit_fan_profile_view.py b/gwe/view/edit_fan_profile_view.py
index 2aa5b27..398f722 100644
--- a/gwe/view/edit_fan_profile_view.py
+++ b/gwe/view/edit_fan_profile_view.py
@@ -140,7 +140,10 @@ class EditFanProfileView(EditFanProfileViewInterface):
 
         self._plot_chart(get_fan_profile_data(profile))
 
-    def refresh_controls(self, step: Optional[SpeedStep] = None, unselect_list: bool = False, profile: Optional[FanProfile] = None) -> None:
+    def refresh_controls(self,
+                         step: Optional[SpeedStep] = None,
+                         unselect_list: bool = False,
+                         profile: Optional[FanProfile] = None) -> None:
         if profile:
             self._vbios_silent_mode.set_active(profile.vbios_silent_mode)
             self._vbios_silent_mode.set_sensitive(profile.steps)
-- 
GitLab


From 15df45f2e8d26f88fb6c2604f2110e4622f6e444 Mon Sep 17 00:00:00 2001
From: Copysiper <oleg-tsv@yandex.ru>
Date: Wed, 3 Aug 2022 20:14:12 +0300
Subject: [PATCH 6/8] Fixes #192

---
 gwe/app.py                | 9 ++++++++-
 gwe/util/desktop_entry.py | 2 +-
 2 files changed, 9 insertions(+), 2 deletions(-)

diff --git a/gwe/app.py b/gwe/app.py
index 72ae6d5..1db98c9 100644
--- a/gwe/app.py
+++ b/gwe/app.py
@@ -16,6 +16,7 @@
 # along with gwe.  If not, see <http://www.gnu.org/licenses/>.
 
 import logging
+from time import sleep
 from enum import Enum
 from gettext import gettext as _
 from typing import Any, Optional, List
@@ -113,7 +114,7 @@ class Application(Gtk.Application):
 
         if _Options.AUTOSTART_OFF.value in options:
             _LOG.debug(f"Option {_Options.AUTOSTART_OFF.value} selected")
-            set_autostart_entry(True)
+            set_autostart_entry(False)
             start_app = False
 
         if _Options.CTRL_DISPLAY.value in options:
@@ -121,6 +122,9 @@ class Application(Gtk.Application):
             _LOG.debug(f"Option {_Options.CTRL_DISPLAY.value} selected: {param}")
             self._nvidia_repository.set_ctrl_display(param)
 
+        if _Options.DELAY.value in options:
+            sleep(3)
+
         if start_app:
             self.activate()
         return exit_value
@@ -135,6 +139,8 @@ class Application(Gtk.Application):
                               description="Show the App version"),
             build_glib_option(_Options.HIDE_WINDOW.value,
                               description="Start with the main window hidden"),
+            build_glib_option(_Options.DELAY.value,
+                              description="Set a small delay on start"),
             build_glib_option(_Options.CTRL_DISPLAY.value,
                               arg=GLib.OptionArg.STRING,
                               description="Specify the NV-CONTROL display (if you use Bumblebee, set this to \":8\" "
@@ -155,3 +161,4 @@ class _Options(Enum):
     CTRL_DISPLAY = 'ctrl-display'
     AUTOSTART_ON = 'autostart-on'
     AUTOSTART_OFF = 'autostart-off'
+    DELAY = 'delay'
diff --git a/gwe/util/desktop_entry.py b/gwe/util/desktop_entry.py
index e428726..72b04d2 100644
--- a/gwe/util/desktop_entry.py
+++ b/gwe/util/desktop_entry.py
@@ -36,7 +36,7 @@ def set_autostart_entry(is_enabled: bool) -> None:
         for key, value in DESKTOP_ENTRY.items():
             desktop_parser.set(key, value)
         desktop_parser.set(DESKTOP_ENTRY_ICON, get_data_path(APP_ICON_NAME))
-        desktop_parser.set(DESKTOP_ENTRY_EXEC, f'{APP_PACKAGE_NAME} --hide-window')
+        desktop_parser.set(DESKTOP_ENTRY_EXEC, f'{APP_PACKAGE_NAME} --hide-window --delay')
 
     desktop_parser.set(AUTOSTART_FLAG, str(is_enabled).lower())
     desktop_parser.write()
-- 
GitLab


From bdc37daab84c9c14adf36b25f39d5c767f51032b Mon Sep 17 00:00:00 2001
From: Roberto Leinardi <leinardi@gmail.com>
Date: Thu, 13 Apr 2023 13:50:54 +0200
Subject: [PATCH 7/8] Updated several Python dependencies

---
 requirements.txt | 12 ++++++------
 2 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/requirements.txt b/requirements.txt
index 94f765d..85a6fd5 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,9 +1,9 @@
 injector==0.20.1
-matplotlib==3.5.2
-peewee==3.15.1
+matplotlib==3.7.1
+peewee==3.16.0
 py3nvml==0.2.7
-PyGObject==3.42.1
-python-xlib==0.31
+PyGObject==3.44.1
+python-xlib==0.33
 pyxdg==0.28
-requests==2.28.1
-reactivex==4.0.3
\ No newline at end of file
+requests==2.28.2
+reactivex==4.0.4
\ No newline at end of file
-- 
GitLab


From fbc4c6a5c7915c197c8610c24368cf2aa6316621 Mon Sep 17 00:00:00 2001
From: Johanno <johanno.dxxxd@gmail.com>
Date: Thu, 28 Sep 2023 03:22:14 +0200
Subject: [PATCH 8/8] fixed limit issue if no value can be read

---
 gwe/view/main_view.py | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/gwe/view/main_view.py b/gwe/view/main_view.py
index 61c891d..4159ae5 100644
--- a/gwe/view/main_view.py
+++ b/gwe/view/main_view.py
@@ -248,8 +248,10 @@ class MainView(MainViewInterface):
                 minimum = gpu_status.power.minimum
                 maximum = gpu_status.power.maximum
                 default = gpu_status.power.default
-                if minimum is not None and maximum is not None and default is not None and minimum != maximum:
-                    limit = gpu_status.power.limit
+                limit = gpu_status.power.limit
+                if (minimum is not None and maximum is not None
+                        and default is not None and limit is not None
+                        and minimum != maximum):
                     self._power_limit_adjustment.set_lower(minimum)
                     self._power_limit_adjustment.set_upper(maximum)
                     self._power_limit_adjustment.set_value(limit)
-- 
GitLab

