## WIP

pkgname=spacedrive-git
pkgver=1.3.0.r0.g207c82bf
pkgrel=1
pkgdesc="An open source cross-platform file explorer, powered by a virtual distributed filesystem written in Rust."
arch=('x86_64')
url="https://www.spacedrive.com"
license=('GPL3')
depends=('ffmpeg' 'protobuf' 'webkit2gtk')
makedepends=('cargo' 'clang' 'git' 'nodejs>=18.0.0' 'pnpm>=8.0.0')
provides=("${pkgname%-git}")
conflicts=("${pkgname%-git}")
options=('!lto')
source=('git+https://github.com/spacedriveapp/spacedrive.git'
        'git+https://github.com/spacedriveapp/test-files.git')
sha256sums=('SKIP'
            'SKIP')

pkgver() {
  cd "$srcdir/${pkgname%-git}"
  git describe --long --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
}

prepare() {
  cd "$srcdir/${pkgname%-git}"
  pnpm config set store-dir "$srcdir/.pnpm-store"
  export RUSTUP_TOOLCHAIN=stable

  git submodule init
  git config submodule.packages/test-files.url "$srcdir/test-files"
  git -c protocol.file.allow=always submodule update

  pnpm i

  cargo fetch --target "$CARCH-unknown-linux-gnu"

  # Don't bundle AppImage
  sed -i 's/"targets": "all",/"targets": "deb",/g' \
    apps/desktop/src-tauri/tauri.conf.json
}

build() {
  cd "$srcdir/${pkgname%-git}"
  pnpm config set store-dir "$srcdir/.pnpm-store"
  export RUSTUP_TOOLCHAIN=stable
  export CARGO_TARGET_DIR=target

  pnpm prep
  pnpm desktop build
}

package() {
  cd "$srcdir/${pkgname%-git}"
  local releasedir='apps/desktop/src-tauri/target/release'
  install -Dm755 "$releasedir/${pkgname%-git}" -t \
    "$pkgdir/usr/bin/"
  cp -r "$releasedir/bundle/deb/${pkgname%-git}_${pkgver}_amd64/data/usr/share" \
    "$pkgdir/usr/"
}
