# https://aur.archlinux.org/packages/gittyup
groups=('modified')

pkgname=gittyup
_app_id='com.github.Murmele.Gittyup'
pkgver=1.3.0
pkgrel=1
pkgdesc="A graphical Git client designed to help you understand and manage your source code history."
arch=('x86_64')
url="https://murmele.github.io/Gittyup"
license=('MIT')
depends=('cmark' 'hicolor-icon-theme' 'hunspell' 'libgit2' 'libsecret' 'libzip'
         'lua' 'pcre' 'qt5-base')
makedepends=('cmake' 'git' 'libgnome-keyring' 'qt5-tools')
checkdepends=('appstream-glib' 'desktop-file-utils')
optdepends=('git: needed for the credential helpers'
            'git-lfs: git LFS support'
            'libgnome-keyring: for GNOME Keyring for auth credentials')
options=('lto')
_commit=6bf49f007a9fb0577910885607833373d0552101  # tags/gittyup_v1.3.0^0
source=("git+https://github.com/Murmele/Gittyup.git#commit=$_commit"
        'git+https://github.com/commonmark/cmark.git'
        'git+https://github.com/git/git.git'
        'git+https://github.com/hunspell/hunspell'
        'git+https://github.com/stinb/libgit2.git'
        'git+https://github.com/libssh2/libssh2.git'
        'git+https://github.com/openssl/openssl.git'
        'git+https://github.com/ScintillaOrg/lexilla.git'
        'git+https://github.com/orbitalquark/scintillua.git'
        'git+https://github.com/kuba--/zip.git'
        )
sha256sums=('SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP')

pkgver() {
  cd "$srcdir/Gittyup"
  git describe --tags --exclude development | sed "s/^${pkgname}_v//;s/-/+/g"
}

prepare() {
  cd "$srcdir/Gittyup"
  git submodule init

  for submodule in cmark git hunspell libssh2 openssl; do
    git config "submodule.dep/${submodule}/${submodule}.update" none
  done

  for submodule in lexilla libgit2 scintillua zip; do
    git config "submodule.dep/${submodule}/${submodule}.url" "$srcdir/${submodule}"
  done

  git -c protocol.file.allow=always submodule update
}

build() {

  # prevent static lib mangling with LTO
  CFLAGS+=" -ffat-lto-objects"

  # Build fails with `-DUSE_SYSTEM_LIBGIT2='ON'`

  cmake -B build -S Gittyup \
    -DCMAKE_BUILD_TYPE='RelWithDebInfo' \
    -DCMAKE_INSTALL_PREFIX='/usr' \
    -DCMAKE_INSTALL_DATADIR='share' \
    -DENABLE_REPRODUCIBLE_BUILDS='ON' \
    -DBUILD_SHARED_LIBS='OFF' \
    -DUSE_SYSTEM_CMARK='ON' \
    -DUSE_SYSTEM_GIT='ON' \
    -DUSE_SYSTEM_HUNSPELL='ON' \
    -DUSE_SYSTEM_LIBSSH2='ON' \
    -DUSE_SYSTEM_LUA='ON' \
    -DUSE_SYSTEM_OPENSSL='ON' \
    -DUSE_SYSTEM_QT='ON' \
    -DLUA_MODULES_PATH='/usr/lib/lua/5.4' \
    -DGENERATE_APPDATA='ON' \
    -Wno-dev
  cmake --build build
}

check() {
  cd "$srcdir/Gittyup"
  appstream-util validate-relax --nonet "rsrc/linux/${_app_id}.appdata.xml.in" || :
  desktop-file-validate "rsrc/linux/${_app_id}.desktop"
}

package() {
  DESTDIR="$pkgdir" cmake --install build

  cd "$srcdir/Gittyup"
  install -Dm644 LICENSE.md -t  "$pkgdir/usr/share/licenses/$pkgname/"

  cd "$pkgdir/usr"
  rm -f lib/libQt*.so.* lib/*.a
  rm -rf include lib/{cmake,pkgconfig,Plugins}
}
