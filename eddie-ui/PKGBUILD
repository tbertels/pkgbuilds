# https://aur.archlinux.org/packages/eddie-ui
groups=('modified')

pkgname=eddie-ui
pkgver=2.23.2
pkgrel=1
pkgdesc='Eddie - VPN tunnel - UI'
arch=('x86_64')
url="https://eddie.website"
license=('GPL3')
depends=('gtk3' 'libayatana-appindicator' 'libnotify' 'mono' 'openvpn' 'sudo')
makedepends=('desktop-file-utils' 'git' 'mono-msbuild' 'patchelf')
optdepends=('hummingbird: increased OpenVPN performance'
            'openssh: VPN over SSH'
            'stunnel: VPN over SSL')
conflicts=('airvpn')
#source=("Eddie-$pkgver.tar.gz::https://github.com/AirVPN/Eddie/archive/$pkgver.tar.gz")
_commit=a9ebf22515133616811b630caee762b3ef970149  # 2.23.2
source=("git+https://github.com/AirVPN/Eddie.git#commit=${_commit}")
sha256sums=('SKIP')

case "$CARCH" in
    i686) _pkgarch="x86"
      ;;
    x86_64) _pkgarch="x64"
      ;;
esac

build() {

  # Compile C# sources
  cd "$srcdir/Eddie"
  if [ "ui" = "cli" ]; then
    msbuild /verbosity:minimal \
      /p:Configuration="Release" \
      /p:Platform="x64" src/eddie.linux.cli.sln
  elif [ "ui" = "ui" ]; then
    msbuild /verbosity:minimal /p:Configuration="Release" \
    /p:Platform="x64" \src/eddie2.linux.ui.sln
  fi

  # Compile C sources
  chmod +x src/linux_postbuild.sh
  chmod +x src/Lib.Platform.Linux.Native/build.sh
  chmod +x src/UI.GTK.Linux.Tray/build.sh
  
  if [ "ui" = "cli" ]; then
    src/linux_postbuild.sh \
      "src/App.CLI.Linux/bin/x64/Release/" ui x64 Release
  elif [ "ui" = "ui" ]; then
    src/linux_postbuild.sh \
      "src/App.Forms.Linux/bin/x64/Release/" ui x64 Release
  fi
}

package() {
  cd "$srcdir/Eddie"
  install -Dm755 "src/App.CLI.Linux.Elevated/bin/eddie-cli-elevated" \
    "$pkgdir/usr/lib/$pkgname/eddie-cli-elevated"
  install -Dm644 "src/Lib.Core/bin/x64/Release/Lib.Core.dll" \
    "$pkgdir/usr/lib/$pkgname/Lib.Core.dll"
  install -Dm644 "src/Lib.Platform.Linux/bin/x64/Release/Lib.Platform.Linux.dll" \
    "$pkgdir/usr/lib/$pkgname/Lib.Platform.Linux.dll"
  install -Dm644 "src/Lib.Platform.Linux.Native/bin/libLib.Platform.Linux.Native.so" \
    "$pkgdir/usr/lib/$pkgname/libLib.Platform.Linux.Native.so"  
  install -Dm755 "repository/linux_arch/bundle/$pkgname/usr/bin/$pkgname" \
    "$pkgdir/usr/bin/$pkgname"
  install -Dm644 common/manifest.json "$pkgdir/usr/share/$pkgname/manifest.json"
  install -Dm644 common/libraries.txt "$pkgdir/usr/share/$pkgname/libraries.txt"
  install -Dm644 common/gpl3.txt "$pkgdir/usr/share/$pkgname/gpl3.txt"
  install -Dm644 common/cacert.pem "$pkgdir/usr/share/$pkgname/cacert.pem"
  install -Dm644 common/icon.png "$pkgdir/usr/share/$pkgname/icon.png"
  install -Dm644 common/icon_gray.png "$pkgdir/usr/share/$pkgname/icon_gray.png"
  install -Dm644 common/icon.png "$pkgdir/usr/share/$pkgname/tray.png"
  install -Dm644 common/icon_gray.png "$pkgdir/usr/share/$pkgname/tray_gray.png"
  install -Dm644 common/iso-3166.json "$pkgdir/usr/share/$pkgname/iso-3166.json"
  install -Dm644 common/lang/inv.json "$pkgdir/usr/share/$pkgname/lang/inv.json"
  install -Dm644 common/providers/AirVPN.json "$pkgdir/usr/share/$pkgname/providers/AirVPN.json"
  install -Dm644 common/providers/OpenVPN.json "$pkgdir/usr/share/$pkgname/providers/OpenVPN.json"
  install -Dm644 common/providers/WireGuard.json \
    "$pkgdir/usr/share/$pkgname/providers/WireGuard.json"
  install -Dm644 "repository/linux_arch/bundle/$pkgname/usr/share/doc/$pkgname/copyright" \
    "$pkgdir/usr/share/doc/$pkgname/copyright"
  install -Dm644 "repository/linux_arch/bundle/$pkgname/usr/share/polkit-1/actions/org.airvpn.eddie.ui.elevated.policy" \
    "$pkgdir/usr/share/polkit-1/actions/org.airvpn.eddie.ui.elevated.policy"

  if [ "ui" = "cli" ]; then
    install -Dm755 "src/App.CLI.Linux/bin/x64/Release/App.CLI.Linux.exe" \
      "$pkgdir/usr/lib/$pkgname/$pkgname.exe"
  elif [ "ui" = "ui" ]; then
    install -Dm755 "src/App.Forms.Linux/bin/x64/Release/App.Forms.Linux.exe" \
      "$pkgdir/usr/lib/$pkgname/$pkgname.exe"
    install -Dm644 "src/App.Forms.Linux/bin/x64/Release/Lib.Forms.dll" \
      "$pkgdir/usr/lib/$pkgname/Lib.Forms.dll"
    install -Dm644 "src/App.Forms.Linux/bin/x64/Release/Lib.Forms.Skin.dll" \
      "$pkgdir/usr/lib/$pkgname/Lib.Forms.Skin.dll"
    install -Dm755 "src/UI.GTK.Linux.Tray/bin/eddie-tray" "$pkgdir/usr/lib/$pkgname/eddie-tray"
    install -Dm644 "repository/linux_arch/bundle/$pkgname/usr/share/pixmaps/$pkgname.png" \
      "$pkgdir/usr/share/pixmaps/$pkgname.png"
  fi

  # Generate changelog
  curl "https://eddie.website/changelog/?software=client&format=debian&hidden=yes" -o \
    "$pkgdir/usr/share/doc/$pkgname/changelog"
  gzip -n -9 "$pkgdir/usr/share/doc/$pkgname/changelog"

  # Generate man
  mkdir -p "$pkgdir/usr/share/man/man8/"
  mono "$pkgdir/usr/lib/$pkgname/$pkgname.exe" \
    --cli --path.resources="$pkgdir/usr/share/$pkgname/" \
    --help --help.format=man >"$pkgdir/usr/share/man/man8/$pkgname.8"

  if [ "ui" = "ui" ]; then
    ## Fix .desktop file for KDE
    _desktop_session=$(printf "%s" "$DESKTOP_SESSION" | awk -F "/" '{print $NF}')
    if [ "$_desktop_session" = "plasma" ]; then
      msg2 "Installing desktop file for KDE..."
      desktop-file-install -m 644 --set-comment="OpenVPN UI" \
      --dir="$pkgdir/usr/share/applications/" \
      --set-icon="$pkgname" \
      "repository/linux_arch/bundle/$pkgname/usr/share/applications/$pkgname.desktop"
    else
      msg2 "Installing desktop file..."
      desktop-file-install -m 644 --set-comment="OpenVPN UI" \
      --dir="$pkgdir/usr/share/applications/" \
      --set-icon="$pkgname" \
      "repository/linux_arch/bundle/$pkgname/usr/share/applications/$pkgname.desktop"
    fi
  fi
}
