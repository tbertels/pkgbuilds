# https://aur.archlinux.org/packages/bitwarden
groups=('modified')

pkgname=bitwarden
pkgver=1.25.1
pkgrel=2
pkgdesc='A secure and free password manager for all of your devices.'
arch=('x86_64')
url="https://bitwarden.com"
license=('GPL3')
depends=('electron' 'libnotify' 'libsecret' 'libxtst' 'libxss')
makedepends=('git' 'npm' 'python' 'nvm' 'jq')
optdepends=('libappindicator-gtk3: for tray icon')
source=("git+https://github.com/bitwarden/desktop.git#tag=v$pkgver"
        'git+https://github.com/bitwarden/jslib.git'
        'package.json.patch'
        "$pkgname.sh"
        "$pkgname.desktop")
sha256sums=('SKIP'
            'SKIP'
            '90f6fc45619d1c76e4f999d6e256e72a590aed6a352272d85607783b2ab61ab8'
            '829a9db73ecd835196dd68ad0f14a0c197e7084369b6217762fd8315da97e744'
            '6ca2d16c056174f3a00cf5def6221089dfb5d10ad6a8b30640ceecbcb4625efa')

_ensure_local_nvm() {
	# lets be sure we are starting clean
	which nvm >/dev/null 2>&1 && nvm deactivate && nvm unload
	export NVM_DIR="$srcdir/.nvm"

	# The init script returns 3 if version
	# specified in ./.nvrc is not (yet) installed in $NVM_DIR
	# but nvm itself still gets loaded ok
	source /usr/share/nvm/init-nvm.sh || [[ $? != 1 ]]
}

prepare() {
	cd "$srcdir/desktop"
	git submodule init
	git config submodule.jslib.url "$srcdir/jslib"
	git submodule update

	# Patch out postinstall routines
	patch --strip=1 package.json "$srcdir/package.json.patch"

	# Patch build to make it works with system electron
	SYSTEM_ELECTRON_VERSION=$(tail /usr/lib/electron/version | cut -d '%' -f1)
	jq < package.json --arg ver $SYSTEM_ELECTRON_VERSION\
	'.build["electronVersion"]=$ver | .build["electronDist"]="/usr/lib/electron"'\
	> package.json.patched
	mv package.json.patched package.json

	export npm_config_cache="$srcdir/npm_cache"
	local nodeversion='12.22.0'
	local npm_prefix=$(npm config get prefix)
	npm config delete prefix
	_ensure_local_nvm
	nvm install "$nodeversion" && nvm use "$nodeversion"
}

build() {
	export ELECTRON_SKIP_BINARY_DOWNLOAD=1
	_ensure_local_nvm

	cd "$srcdir/desktop/jslib"
	npm install

	cd "$srcdir/desktop"
	npm install
	npm run build
	npm run clean:dist
	npx electron-builder build --dir

	# Restore node config from nvm
	npm config set prefix "$npm_prefix"
	nvm unalias default
}

package() {
	cd "$srcdir/desktop"
	install -d "$pkgdir/usr/lib/$pkgname"
	cp -r dist/linux-unpacked/resources "$pkgdir/usr/lib/$pkgname"

	for i in 16 32 48 64 128 256 512; do
		install -Dm644 resources/icons/${i}x${i}.png \
			"$pkgdir/usr/share/icons/hicolor/${i}x${i}/apps/$pkgname.png"
	install -Dm644 resources/icon.png \
		"$pkgdir/usr/share/icons/hicolor/1024x1024/apps/$pkgname.png"
	done

	install -Dm755 "$srcdir/$pkgname.sh" "$pkgdir/usr/bin/bitwarden-desktop"
	install -Dm644 "$srcdir/$pkgname.desktop" -t "$pkgdir/usr/share/applications"
}
