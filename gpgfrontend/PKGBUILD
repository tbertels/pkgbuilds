# https://aur.archlinux.org/packages/gpgfrontend
groups=('modified')

pkgname=gpgfrontend
pkgver=2.1.1
pkgrel=1
pkgdesc="OpenPGP crypto tool and gui frontend for modern GnuPG"
arch=('x86_64')
url="https://gpgfrontend.bktus.com"
license=('GPL-3.0-or-later')
depends=(
  'gnupg'
  'gpgme'
  'hicolor-icon-theme'
  'icu'
  'libarchive'
  'libassuan'
  'libconfig'
  'libgpg-error'
  'ncurses'
  'qt6-5compat'
  'qt6-base'
)
makedepends=('boost' 'cmake' 'git')
_commit=1cecd4d8ba7c88f4ad56137827fa431de0d62a16  # tags/v2.1.1^0
source=("git+https://github.com/saturneric/GpgFrontend#commit=${_commit}"
        'git+https://github.com/gpg/gpgme.git'
        'git+https://github.com/gpg/libassuan.git'
        'git+https://github.com/gpg/libgpg-error.git'
        'git+https://github.com/nlohmann/json.git'
        'git+https://github.com/bricke/Qt-AES.git'
        'git+https://github.com/libarchive/libarchive.git'
        'git+https://github.com/hyperrealm/libconfig.git'
        'git+https://github.com/gabime/spdlog.git')
sha256sums=('SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP')

pkgver() {
  cd GpgFrontend
  git describe --tags | sed 's/^v//;s/-/+/g'
}

prepare() {
  cd GpgFrontend
  git submodule init
  git config submodule.third_party/gpgme.url "$srcdir/gpgme"
  git config submodule.third_party/libassuan.url "$srcdir/libassuan"
  git config submodule.third_party/libgpg-error.url "$srcdir/libgpg-error"
  git config submodule.third_party/json.url "$srcdir/json"
  git config submodule.third_party/Qt-AES.url "$srcdir/Qt-AES"
  git config submodule.third_party/libarchive.url "$srcdir/libarchive"
  git config submodule.third_party/libconfig.url "$srcdir/libconfig"
  git config submodule.third_party/spdlog.url "$srcdir/spdlog"
  git -c protocol.file.allow=always submodule update

  # /usr/local/ > /usr/
  find . -type f -exec sed -i 's|/usr/local|/usr|g' {} \;

  mkdir -p "$srcdir/lib"
}

build() {
  cmake -B build -S GpgFrontend \
    -DCMAKE_BUILD_TYPE='None' \
    -DCMAKE_INSTALL_PREFIX='/usr' \
    -DGPGFRONTEND_GENERATE_LINUX_INSTALL_SOFTWARE='ON' \
    -Wno-dev
  cmake --build build
}

package() {
  DESTDIR="$pkgdir" cmake --install build

  # Stash the libs we actually need
  cp -f "$pkgdir"/usr/lib/libgpgfrontend{_core,_ui}.so "$srcdir/lib/"

  # Remove empty dirs & conflicting files
  rm -r "$pkgdir"/usr/lib/*

  install -m755 "$srcdir"/lib/libgpgfrontend{_core,_ui}.so -t "$pkgdir/usr/lib/"
}
